{
  "Fluido - API With Body `typescript`": {
    "scope": "typescript",
    "prefix": "flapb",
    "body": [
      "import { api } from '@fluido/react-utils'",
      "import { Validator } from 'express-json-validator-middleware'",
      "import { JSONSchema7 } from 'json-schema'",
      "import firebaseAdmin from 'app-server/firebase-admin-init'",
      "import { StatusCodes, ReasonPhrases } from 'http-status-codes'",
      "",
      "const bodySchema: JSONSchema7 = {",
      "  type: 'object',",
      "  properties: {},",
      "}",
      "",
      "const validator = new Validator({ allErrors: true })",
      "",
      "export default api.MiddlewareWrapper(",
      "  api.blockRequestMethod('POST'),",
      "  api.verifyToken,",
      "  api.loadFirebaseClaims(firebaseAdmin.app(), process.env.AUTOMATION_KEYS),",
      "  validator.validate({ body: bodySchema }),",
      "  (request: api.AppRequest, response: api.AppResponse) => {",
      "    if (!request.user)",
      "      return response",
      "        .status(StatusCodes.UNAUTHORIZED)",
      "        .json({ message: ReasonPhrases.UNAUTHORIZED })",
      "",
      "    Promise.resolve(true)",
      "      .then(async () => {",
      "        response",
      "          .status(StatusCodes.OK)",
      "          .json({ message: ReasonPhrases.OK })",
      "      })",
      "      .catch((err) => {",
      "        console.error(err)",
      "        response",
      "          .status(StatusCodes.BAD_REQUEST)",
      "          .json({ message: ReasonPhrases.BAD_REQUEST })",
      "      })",
      "  },",
      ")"
    ]
  },
  "Fluido - API With Body `javascript`": {
    "scope": "javascript",
    "prefix": "flapb",
    "body": [
      "import { api } from '@fluido/react-utils'",
      "import { Validator } from 'express-json-validator-middleware'",
      "import firebaseAdmin from 'app-server/firebase-admin-init'",
      "import { StatusCodes, ReasonPhrases } from 'http-status-codes'",
      "",
      "const bodySchema = {",
      "  type: 'object',",
      "  properties: {},",
      "}",
      "",
      "const validator = new Validator({ allErrors: true })",
      "",
      "export default api.MiddlewareWrapper(",
      "  api.blockRequestMethod('POST'),",
      "  api.verifyToken,",
      "  api.loadFirebaseClaims(firebaseAdmin.app(), process.env.AUTOMATION_KEYS),",
      "  validator.validate({ body: bodySchema }),",
      "  (request, response) => {",
      "    if (!request.user)",
      "      return response",
      "        .status(StatusCodes.UNAUTHORIZED)",
      "        .json({ message: ReasonPhrases.UNAUTHORIZED })",
      "",
      "    Promise.resolve(true)",
      "      .then(async () => {",
      "        response",
      "          .status(StatusCodes.OK)",
      "          .json({ message: ReasonPhrases.OK })",
      "      })",
      "      .catch((err) => {",
      "        console.error(err)",
      "        response",
      "          .status(StatusCodes.BAD_REQUEST)",
      "          .json({ message: ReasonPhrases.BAD_REQUEST })",
      "      })",
      "  },",
      ")"
    ]
  },
  "Fluido - API Simple `typescript`": {
    "scope": "typescript",
    "prefix": "flap",
    "body": [
      "import { api } from '@fluido/react-utils'",
      "import firebaseAdmin from 'app-server/firebase-admin-init'",
      "import { StatusCodes, ReasonPhrases } from 'http-status-codes'",
      "",
      "export default api.MiddlewareWrapper(",
      "  api.blockRequestMethod('GET'),",
      "  api.verifyToken,",
      "  api.loadFirebaseClaims(firebaseAdmin.app(), process.env.AUTOMATION_KEYS),",
      "  (request: api.AppRequest, response: api.AppResponse) => {",
      "    if (!request.user)",
      "      return response",
      "        .status(StatusCodes.UNAUTHORIZED)",
      "        .json({ message: ReasonPhrases.UNAUTHORIZED })",
      "",
      "    Promise.resolve(true)",
      "      .then(async () => {",
      "        response",
      "          .status(StatusCodes.OK)",
      "          .json({ message: ReasonPhrases.OK })",
      "      })",
      "      .catch((err) => {",
      "        console.error(err)",
      "        response",
      "          .status(StatusCodes.BAD_REQUEST)",
      "          .json({ message: ReasonPhrases.BAD_REQUEST })",
      "      })",
      "  },",
      ")"
    ]
  },
  "Fluido - API Simple `javascript`": {
    "scope": "javascript",
    "prefix": "flap",
    "body": [
      "import { api } from '@fluido/react-utils'",
      "import firebaseAdmin from 'app-server/firebase-admin-init'",
      "import { StatusCodes, ReasonPhrases } from 'http-status-codes'",
      "",
      "export default api.MiddlewareWrapper(",
      "  api.blockRequestMethod('GET'),",
      "  api.verifyToken,",
      "  api.loadFirebaseClaims(firebaseAdmin.app(), process.env.AUTOMATION_KEYS),",
      "  (request, response) => {",
      "    if (!request.user)",
      "      return response",
      "        .status(StatusCodes.UNAUTHORIZED)",
      "        .json({ message: ReasonPhrases.UNAUTHORIZED })",
      "",
      "    Promise.resolve(true)",
      "      .then(async () => {",
      "        response",
      "          .status(StatusCodes.OK)",
      "          .json({ message: ReasonPhrases.OK })",
      "      })",
      "      .catch((err) => {",
      "        console.error(err)",
      "        response",
      "          .status(StatusCodes.BAD_REQUEST)",
      "          .json({ message: ReasonPhrases.BAD_REQUEST })",
      "      })",
      "  },",
      ")"
    ]
  }
}
